// <auto-generated />
using DiscordRPG.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DiscordRPG.Migrations
{
    [DbContext(typeof(EFContext))]
    [Migration("20210303090250_NewDatabase")]
    partial class NewDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DiscordRPG.Models.EquipmentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("PlayerModelId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("PlayerModelId1")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("PlayerModelId");

                    b.HasIndex("PlayerModelId1");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("DiscordRPG.Models.ItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("BaseChance")
                        .HasColumnType("int");

                    b.Property<int>("Chance")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxAmount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeakChance")
                        .HasColumnType("int");

                    b.Property<decimal?>("PlayerModelId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("PlayerModelId1")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlayerModelId");

                    b.HasIndex("PlayerModelId1");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("DiscordRPG.Models.MaterialModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("BaseChance")
                        .HasColumnType("int");

                    b.Property<int>("Chance")
                        .HasColumnType("int");

                    b.Property<string>("Element")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeakChance")
                        .HasColumnType("int");

                    b.Property<decimal?>("PlayerModelId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("PlayerModelId1")
                        .HasColumnType("decimal(20,0)");

                    b.Property<int>("Tier")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerModelId");

                    b.HasIndex("PlayerModelId1");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("DiscordRPG.Models.PlayerModel", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<int>("Bp")
                        .HasColumnType("int");

                    b.Property<int>("Defense")
                        .HasColumnType("int");

                    b.Property<string>("Hashname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<int>("MHealth")
                        .HasColumnType("int");

                    b.Property<int>("Money")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("DiscordRPG.Models.SkillModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescriptionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PlayerModelId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("SkillName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlayerModelId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("DiscordRPG.Models.EquipmentModel", b =>
                {
                    b.HasOne("DiscordRPG.Models.PlayerModel", null)
                        .WithMany("CEquipment")
                        .HasForeignKey("PlayerModelId");

                    b.HasOne("DiscordRPG.Models.PlayerModel", null)
                        .WithMany("SEquipment")
                        .HasForeignKey("PlayerModelId1");
                });

            modelBuilder.Entity("DiscordRPG.Models.ItemModel", b =>
                {
                    b.HasOne("DiscordRPG.Models.PlayerModel", null)
                        .WithMany("CItems")
                        .HasForeignKey("PlayerModelId");

                    b.HasOne("DiscordRPG.Models.PlayerModel", null)
                        .WithMany("SItems")
                        .HasForeignKey("PlayerModelId1");
                });

            modelBuilder.Entity("DiscordRPG.Models.MaterialModel", b =>
                {
                    b.HasOne("DiscordRPG.Models.PlayerModel", null)
                        .WithMany("CMaterials")
                        .HasForeignKey("PlayerModelId");

                    b.HasOne("DiscordRPG.Models.PlayerModel", null)
                        .WithMany("SMaterials")
                        .HasForeignKey("PlayerModelId1");
                });

            modelBuilder.Entity("DiscordRPG.Models.SkillModel", b =>
                {
                    b.HasOne("DiscordRPG.Models.PlayerModel", null)
                        .WithMany("Skills")
                        .HasForeignKey("PlayerModelId");
                });

            modelBuilder.Entity("DiscordRPG.Models.PlayerModel", b =>
                {
                    b.Navigation("CEquipment");

                    b.Navigation("CItems");

                    b.Navigation("CMaterials");

                    b.Navigation("SEquipment");

                    b.Navigation("SItems");

                    b.Navigation("Skills");

                    b.Navigation("SMaterials");
                });
#pragma warning restore 612, 618
        }
    }
}
